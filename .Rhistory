knn.pred <- knn(train[,-train$Personal.Loan],test[,-test$Personal.Loan], cl=train$Personal.Loan, k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test[,test$Personal.Loan]))$overall[i]
}
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-train$Personal.Loan],test[,-test$Personal.Loan], cl=train$Personal.Loan, k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test[,test$Personal.Loan]))$overall[i]
}
acc[i,2]<-confusionMatrix(as.factor(knn.pred), as.factor(test[,test$Personal.Loan]))$overall[i]
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-train$Personal.Loan],test[,-test$Personal.Loan], cl=train$Personal.Loan, k=i)
acc[i,2]<-confusionMatrix(as.factor(knn.pred), as.factor(test[,test$Personal.Loan]))$overall[i]
}
for(i in 1:15){
knn.pred <- knn(train[,-train$Personal.Loan],test[,-test$Personal.Loan], cl=train$Personal.Loan, k=i)
acc[i,2]<-confusionMatrix(as.factor(knn.pred), as.factor(test[,test$Personal.Loan]))$overall[i]
}
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-train$Personal.Loan],test[,-test$Personal.Loan], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(as.factor(knn.pred), as.factor(test[,test$Personal.Loan]))$overall[i]
}
for(i in 1:15){
knn.pred <- knn(train[,-train$Personal.Loan],test[,-test$Personal.Loan], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test[,test$Personal.Loan]))$overall[i]
}
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-train$Personal.Loan],test[,-test$Personal.Loan], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test[,test$Personal.Loan]))$overall[i]
}
train[,-train$Personal.Loan]
train[,-c(8)]
knn1(train[,-c(8)], t,cl)
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
normalize(df,method='standardize', range=c(0,1))
library(caTools)
sample=sample.split(df,SplitRatio = .6)
train=subset(df,sample=TRUE)
test=subset(df, sample=FALSE)
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test[,test$Personal.Loan]))$overall[i]
}
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
confusionMatrix(knn1(train[,-c(8)],test[,-c(8)],cl), as.factor(test$Personal.Loan))
View(df)
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
df<-normalize(df,method='standardize', range=c(0,1))
library(caTools)
sample=sample.split(df,SplitRatio = .6)
train=subset(df,sample=TRUE)
test=subset(df, sample=FALSE)
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
df<-normalize(df, range=c(0,1))
library(caTools)
sample=sample.split(df,SplitRatio = .6)
train=subset(df,sample=TRUE)
test=subset(df, sample=FALSE)
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
df$Personal.Loan <- as.factor(df$Personal.Loan)
df<-normalize(df, range=c(0,1))
sample=sample.split(df,SplitRatio = .6)
train=subset(df,sample=TRUE)
test=subset(df, sample=FALSE)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
library(caret)
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
confusionMatrix(knn1(train[,-c(8)],test[,-c(8)],cl), as.factor(test$Personal.Loan))
sample=sample.split(df,SplitRatio = .5)
tr<-subset(df,TRUE)
temp<-subset(df,FALSE)
sample=sample.split(temp,SplitRatio = .6)
val<-subset(temp,TRUE)
test<-subset(temp,FALSE)
k<-knn1(tr[,-c(8)],test[,-c(8)],cl=as.factor(tr$Personal.Loan))
confusionMatrix(k,as.factor((val$Personal.Loan)))
confusionMatrix(k, as.factor(test$Personal.Loan))
confusionMatrix(k,as.factor(val$Personal.Loan))
tr<-subset(df,sample=TRUE)
temp<-subset(df,sample=FALSE)
sample=sample.split(temp,SplitRatio = .6)
val<-subset(temp,sample=TRUE)
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
df$Personal.Loan <- as.factor(df$Personal.Loan)
df<-normalize(df, range=c(0,1))
sample=sample.split(df,SplitRatio = .5)
tr<-subset(df,sample=TRUE)
library(caTools)
sample=sample.split(df,SplitRatio = .5)
tr<-subset(df,sample=TRUE)
View(tr)
train_index<-sample(1:nrow(df),0.5*nrow(adult))
temp_index<-setdiff(1:nrow(df),train_index)
train_index<-sample(1:nrow(df),0.5*nrow(adult))
train_index<-sample(1:nrow(df),0.5*nrow(df))
temp_index<-setdiff(1:nrow(df),train_index)
tr<-df[train_index]
tr<-df[,train_index]
tr<-df[train_index,]
temp<-df[temp_index,]
val_index(sample(1:nrow(temp),0.6*nrow(temp)))
val_index<-sample(1:nrow(temp),0.6*nrow(temp))
test_index<-setdiff(1:nrow(temp),val_index)
test_index<-temp[test_index,]
k<-knn1(tr[,-c(8)],test[,-c(8)],cl=as.factor(tr$Personal.Loan))
confusionMatrix(k,as.factor(val$Personal.Loan))
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
df$Personal.Loan <- as.factor(df$Personal.Loan)
df<-normalize(df, range=c(0,1))
library(caTools)
train_index<-sample(1:nrow(df),0.5*nrow(df))
test_index<-setdiff(1:nrow(temp),val_index)
train<-df[train_index,]
test_index<-temp[test_index,]
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
library(caret)
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
test<-temp[test_index,]
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
df$Personal.Loan <- as.factor(df$Personal.Loan)
df<-normalize(df, range=c(0,1))
library(caTools)
train_index<-sample(1:nrow(df),0.5*nrow(df))
test_index<-setdiff(1:nrow(temp),val_index)
train<-df[train_index,]
test<-temp[test_index,]
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
library(caret)
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
confusionMatrix(knn1(train[,-c(8)],test[,-c(8)],cl), as.factor(test$Personal.Loan))
train_index<-sample(1:nrow(df),0.5*nrow(df))
temp_index<-setdiff(1:nrow(df),train_index)
tr<-df[train_index,]
temp<-df[temp_index,]
val_index<-sample(1:nrow(temp),0.6*nrow(temp))
test_index<-setdiff(1:nrow(temp),val_index)
val<-temp[val_index,]
test<-temp[test_index,]
k<-knn1(tr[,-c(8)],test[,-c(8)],cl=as.factor(tr$Personal.Loan))
confusionMatrix(k,as.factor(val$Personal.Loan))
k<-knn(tr[,-c(8)],test[,-c(8)],cl=as.factor(tr$Personal.Loan),k=1)
confusionMatrix(k, as.factor(val$Personal.Loan))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
confusionMatrix(k, (val$Personal.Loan))
View(valid)
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
df$Personal.Loan <- as.factor(df$Personal.Loan)
df<-normalize(df, range=c(0,1))
library(caTools)
train_index<-sample(1:nrow(df),0.6*nrow(df))
test_index<-setdiff(1:nrow(temp),val_index)
train<-df[train_index,]
test<-temp[test_index,]
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
library(caret)
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
confusionMatrix(knn1(train[,-c(8)],test[,-c(8)],cl), as.factor(test$Personal.Loan))
k<-knn(tr[,-c(8)],test[,-c(8)],cl=as.factor(tr$Personal.Loan),k=1)
train_index<-sample(1:nrow(df),0.5*nrow(df))
temp_index<-setdiff(1:nrow(df),train_index)
tr<-df[train_index,]
temp<-df[temp_index,]
val_index<-sample(1:nrow(temp),0.6*nrow(temp))
test_index<-setdiff(1:nrow(temp),val_index)
val<-temp[val_index,]
test<-temp[test_index,]
k<-knn(tr[,-c(8)],test[,-c(8)],cl=as.factor(tr$Personal.Loan),k=1)
confusionMatrix(k, as.factor(test$Personal.Loan))
k<-knn(tr[,-c(8)],val[,-c(8)],cl=as.factor(tr$Personal.Loan),k=1)
confusionMatrix(k, (val$Personal.Loan))
train_index<-sample(1:nrow(df),0.5*nrow(df))
temp_index<-setdiff(1:nrow(df),train_index)
tr<-df[train_index,]
temp<-df[temp_index,]
val_index<-sample(1:nrow(temp),0.6*nrow(temp))
test_index<-setdiff(1:nrow(temp),val_index)
val<-temp[val_index,]
test<-temp[test_index,]
k<-knn(tr[,-c(8)],test[,-c(8)],cl=as.factor(tr$Personal.Loan),k=1)
confusionMatrix(k, as.factor(test$Personal.Loan))
k<-knn(tr[,-c(8)],val[,-c(8)],cl=as.factor(tr$Personal.Loan),k=1)
confusionMatrix(k, (val$Personal.Loan))
df<-read.csv('BostonHousing.csv')
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
df$Personal.Loan <- as.factor(df$Personal.Loan)
df<-normalize(df, range=c(0,1))
library(caTools)
train_index<-sample(1:nrow(df),0.6*nrow(df))
test_index<-setdiff(1:nrow(temp),train_index)
train<-df[train_index,]
test<-temp[test_index,]
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
library(caret)
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
confusionMatrix(knn1(train[,-c(8)],test[,-c(8)],cl), as.factor(test$Personal.Loan))
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
df$Personal.Loan <- as.factor(df$Personal.Loan)
df<-normalize(df, range=c(0,1))
library(caTools)
train_index<-sample(1:nrow(df),0.6*nrow(df))
test_index<-setdiff(1:nrow(df),train_index)
train<-df[train_index,]
test<-temp[test_index,]
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
library(caret)
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
confusionMatrix(knn1(train[,-c(8)],test[,-c(8)],cl), as.factor(test$Personal.Loan))
df<-read.csv('UniversalBank.csv')
df<-df[,-c(1,5)]
library(BBmisc)
df$Personal.Loan <- as.factor(df$Personal.Loan)
df<-normalize(df, range=c(0,1))
library(caTools)
train_index<-sample(1:nrow(df),0.6*nrow(df))
test_index<-setdiff(1:nrow(df),train_index)
train<-df[train_index,]
test<-df[test_index,]
library(class)
t <- normalize(c(40,10,84,2,2,2,0,0,0,1,1))
cl<-train$Personal.Loan
knn1(train[,-c(8)], t,cl)
library(caret)
acc <- data.frame(k=seq(1,15,1),accuracy=rep(0,15))
for(i in 1:15){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
confusionMatrix(knn1(train[,-c(8)],test[,-c(8)],cl), as.factor(test$Personal.Loan))
df<-read.csv('BostonHousing.csv')
train_index<-sample(1:nrow(df),0.6*nrow(df))
val_index<-setdiff(1:nrow(df),train_index)
train<-df[train_index,]
test<-temp[test_index,]
df$CAT..MEDV<-as.factor(df$CAT..MEDV)
df<-normalize(df, range=c(0,1))
df<-read.csv('BostonHousing.csv')
df$CAT..MEDV<-as.factor(df$CAT..MEDV)
df<-normalize(df, range=c(0,1))
train_index<-sample(1:nrow(df),0.6*nrow(df))
val_index<-setdiff(1:nrow(df),train_index)
train<-df[train_index,]
val<-df[val_index]
val<-df[val_index,]
acc <- data.frame(k=seq(1,5,1),accuracy=rep(0,5))
for(i in 1:5){
knn.pred <- knn(train[,-c(8)],test[,-c(8)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
df<-df[,-c(13)]
df<-normalize(df, range=c(0,1))
train_index<-sample(1:nrow(df),0.6*nrow(df))
val_index<-setdiff(1:nrow(df),train_index)
train<-df[train_index,]
val<-df[val_index,]
acc <- data.frame(k=seq(1,5,1),accuracy=rep(0,5))
acc <- data.frame(k=seq(1,5,1),accuracy=rep(0,5))
for(i in 1:5){
knn.pred <- knn(train[,-c(13)],val[,-c(13)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(test$Personal.Loan))$overall[i]
}
acc[i,2]<-confusionMatrix(knn.pred, as.factor(val$CAT..MEDV))$overall[i]
acc <- data.frame(k=seq(1,5,1),accuracy=rep(0,5))
for(i in 1:5){
knn.pred <- knn(train[,-c(13)],val[,-c(13)], cl=as.factor(train$Personal.Loan), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(val$CAT..MEDV))$overall[i]
}
acc <- data.frame(k=seq(1,5,1),accuracy=rep(0,5))
for(i in 1:5){
knn.pred <- knn(train[,-c(13)],val[,-c(13)], cl=as.factor(train$CAT..MEDV), k=i)
acc[i,2]<-confusionMatrix(knn.pred, as.factor(val$CAT..MEDV))$overall[i]
}
df<-read.csv('BostonHousing.csv')
df<-df[,-c(14)]
df<-normalize(df, range=c(0,1))
train_index<-sample(1:nrow(df),0.6*nrow(df))
val_index<-setdiff(1:nrow(df),train_index)
train<-df[train_index,]
val<-df[val_index,]
knn(train[,-c(13)],val[,-c(13)],cl=as.factor(train$MEDV),k=4)
t<-normalize(c(.2,0,7,0,.538,6,62,4.7,4,307,21,10))
knn(train[,-c(13)],t,cl=as.factor(train$MEDV),k=4)
d<-df$MEDV
df$MEDV<-d
train_index<-sample(1:nrow(df),0.6*nrow(df))
val_index<-setdiff(1:nrow(df),train_index)
train<-df[train_index,]
val<-df[val_index,]
t<-normalize(c(.2,0,7,0,.538,6,62,4.7,4,307,21,10))
knn(train[,-c(13)],t,cl=as.factor(train$MEDV),k=4)
knn(train[,-c(13)],t,cl=train$MEDV,k=4)
confusionMatrix(knn(train[,-c(13)],val[,-c(13)],cl=train$MEDV,k=4), train$MEDV)
confusionMatrix(knn(train[,-c(13)],t,cl=train$MEDV,k=4), train$MEDV)
confusionMatrix(knn(train[,-c(13)],val[,-c(13)],cl=train$MEDV,k=4), as.factor(train$MEDV))
confusionMatrix(knn(train[,-c(13)],val[,-c(13)],as.factor(cl=train$MEDV),k=4), as.factor(train$MEDV))
confusionMatrix(knn(train[,-c(13)],val[,-c(13)],cl=as.factor(train$MEDV),k=4), as.factor(train$MEDV))
shiny::runApp('testyTest')
df<-read.csv('dataCleaned.csv')
model<-lm(df$frequency~df$y*df$m*df$d*df$dow)
model<-lm(df$frequency~df$y+df$m+df$d+df$dow)
summary(model)
#Turns out year and month have a significant relationship to number of events, and some days of the week have an influence but not all.
#interestingly, the date in the month does not have a significant effect.
barplot(table(df$y),main=("Number of Crime Events by Year"))
barplot(table(df$m),main=("Number of Crime Events by Month"))
barplot(table(df$d),main=("Number of Crime Events by Day of Month"))
barplot(table(df$dow),main=("Number of Crime Events by Day of Week"))
totalCrimePerYear=c(0,0,0,0,0,0)
avgCrimePerYear<-totalCrimePerYear
for (i in 2009:2014) {
d<-df[(df$y==i),]
totalCrimePerYear[i-2008]=sum(d$frequency)
avgCrimePerYear[i-2008]=totalCrimePerYear[i-2008]/length(d$frequency)
}
years = data.frame(c(2009:2014),totalCrimePerYear,avgCrimePerYear)
barplot(years$avgCrimePerYear,names.arg = years$c.2009.2014.,main = "Average Crime Events by Year")
totalCrimePerMonth = integer(12)
avgCrimePerMonth = integer(12)
for (i in 1:12) {
d<-df[(df$m==i),]
totalCrimePerMonth[i]=sum(d$frequency)
avgCrimePerMonth[i]=totalCrimePerMonth[i]/length(d$frequency)
}
barplot(avgCrimePerMonth,names.arg = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"), main = "Average Crime Events by Month")
totalCrimePerDay = integer(31)
avgCrimePerDay = integer(31)
for (i in 1:31) {
d<-df[(df$d==i),]
totalCrimePerDay[i]=sum(d$frequency)
avgCrimePerDay[i]=totalCrimePerDay[i]/length(d$frequency)
}
barplot(avgCrimePerDay,names.arg = c(1:31), main = "Average Crime Events by Day in Month")
weekday=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
totalCrimePerWeekday = integer(7)
avgCrimePerWeekday = integer(7)
weekdayCrime = data.frame(weekday,totalCrimePerWeekday,avgCrimePerWeekday)
d<-df[(df$dow=="Monday"),]
weekdayCrime$totalCrimePerWeekday[1]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[1]=weekdayCrime$totalCrimePerWeekday[1]/length(d$X)
d<-df[(df$dow=="Tuesday"),]
weekdayCrime$totalCrimePerWeekday[2]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[2]=weekdayCrime$totalCrimePerWeekday[2]/length(d$X)
d<-df[(df$dow=="Wednesday"),]
weekdayCrime$totalCrimePerWeekday[3]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[3]=weekdayCrime$totalCrimePerWeekday[3]/length(d$X)
d<-df[(df$dow=="Thursday"),]
weekdayCrime$totalCrimePerWeekday[4]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[4]=weekdayCrime$totalCrimePerWeekday[4]/length(d$X)
d<-df[(df$dow=="Friday"),]
weekdayCrime$totalCrimePerWeekday[5]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[5]=weekdayCrime$totalCrimePerWeekday[5]/length(d$X)
d<-df[(df$dow=="Saturday"),]
weekdayCrime$totalCrimePerWeekday[6]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[6]=weekdayCrime$totalCrimePerWeekday[6]/length(d$X)
d<-df[(df$dow=="Sunday"),]
weekdayCrime$totalCrimePerWeekday[7]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[7]=weekdayCrime$totalCrimePerWeekday[7]/length(d$X)
barplot(weekdayCrime$avgCrimePerWeekday,names.arg = weekdayCrime$weekday, main = "Average Crime Events by Day of the Week")
setwd("~/GitHub/Milwaukee-Crime-Forecaster")
df<-read.csv('dataCleaned.csv')
model<-lm(df$frequency~df$y*df$m*df$d*df$dow)
model<-lm(df$frequency~df$y+df$m+df$d+df$dow)
summary(model)
#Turns out year and month have a significant relationship to number of events, and some days of the week have an influence but not all.
#interestingly, the date in the month does not have a significant effect.
barplot(table(df$y),main=("Number of Crime Events by Year"))
barplot(table(df$m),main=("Number of Crime Events by Month"))
barplot(table(df$d),main=("Number of Crime Events by Day of Month"))
barplot(table(df$dow),main=("Number of Crime Events by Day of Week"))
totalCrimePerYear=c(0,0,0,0,0,0)
avgCrimePerYear<-totalCrimePerYear
for (i in 2009:2014) {
d<-df[(df$y==i),]
totalCrimePerYear[i-2008]=sum(d$frequency)
avgCrimePerYear[i-2008]=totalCrimePerYear[i-2008]/length(d$frequency)
}
years = data.frame(c(2009:2014),totalCrimePerYear,avgCrimePerYear)
barplot(years$avgCrimePerYear,names.arg = years$c.2009.2014.,main = "Average Crime Events by Year")
totalCrimePerMonth = integer(12)
avgCrimePerMonth = integer(12)
for (i in 1:12) {
d<-df[(df$m==i),]
totalCrimePerMonth[i]=sum(d$frequency)
avgCrimePerMonth[i]=totalCrimePerMonth[i]/length(d$frequency)
}
barplot(avgCrimePerMonth,names.arg = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"), main = "Average Crime Events by Month")
totalCrimePerDay = integer(31)
avgCrimePerDay = integer(31)
for (i in 1:31) {
d<-df[(df$d==i),]
totalCrimePerDay[i]=sum(d$frequency)
avgCrimePerDay[i]=totalCrimePerDay[i]/length(d$frequency)
}
barplot(avgCrimePerDay,names.arg = c(1:31), main = "Average Crime Events by Day in Month")
weekday=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
totalCrimePerWeekday = integer(7)
avgCrimePerWeekday = integer(7)
weekdayCrime = data.frame(weekday,totalCrimePerWeekday,avgCrimePerWeekday)
d<-df[(df$dow=="Monday"),]
weekdayCrime$totalCrimePerWeekday[1]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[1]=weekdayCrime$totalCrimePerWeekday[1]/length(d$X)
d<-df[(df$dow=="Tuesday"),]
weekdayCrime$totalCrimePerWeekday[2]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[2]=weekdayCrime$totalCrimePerWeekday[2]/length(d$X)
d<-df[(df$dow=="Wednesday"),]
weekdayCrime$totalCrimePerWeekday[3]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[3]=weekdayCrime$totalCrimePerWeekday[3]/length(d$X)
d<-df[(df$dow=="Thursday"),]
weekdayCrime$totalCrimePerWeekday[4]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[4]=weekdayCrime$totalCrimePerWeekday[4]/length(d$X)
d<-df[(df$dow=="Friday"),]
weekdayCrime$totalCrimePerWeekday[5]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[5]=weekdayCrime$totalCrimePerWeekday[5]/length(d$X)
d<-df[(df$dow=="Saturday"),]
weekdayCrime$totalCrimePerWeekday[6]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[6]=weekdayCrime$totalCrimePerWeekday[6]/length(d$X)
d<-df[(df$dow=="Sunday"),]
weekdayCrime$totalCrimePerWeekday[7]=sum(d$frequency)
weekdayCrime$avgCrimePerWeekday[7]=weekdayCrime$totalCrimePerWeekday[7]/length(d$X)
barplot(weekdayCrime$avgCrimePerWeekday,names.arg = weekdayCrime$weekday, main = "Average Crime Events by Day of the Week")
totalCrimePerDay = integer(31)
avgCrimePerDay = integer(31)
for (i in 1:31) {
d<-df[(df$d==i),]
totalCrimePerDay[i]=sum(d$frequency)
avgCrimePerDay[i]=totalCrimePerDay[i]/length(d$frequency)
}
barplot(avgCrimePerDay,names.arg = c(1:31), main = "Average Crime Events by Day in Month", ylim=c(20,50))
barplot(avgCrimePerDay,names.arg = c(1:31), main = "Average Crime Events by Day in Month", ylim=c(0,50))
barplot(weekdayCrime$avgCrimePerWeekday,names.arg = weekdayCrime$weekday, main = "Average Crime Events by Day of the Week", ylim=c(0,50))
barplot(avgCrimePerMonth,names.arg = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"), main = "Average Crime Events by Month", ylim=c(0,50))
